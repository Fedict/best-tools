---
openapi: 3.0.3
info:
  title: v2 Belgian Streets and Addresses REST API Demo
  description: "OpenAPI specification of the v2 Belgian Streets and Addresses (BeSt) REST API.\n\n\
    \ By relying on a consolidated dataset, this new version delivers greater performance and more\
    \ features.\
    \ An address is an identification of the fixed location of a property."
  contact:
    name: BOSA DG DT servicedesk
    email: servicedesk.DTO@bosa.fgov.be
  version: 2.0.0
  termsOfService: /about
tags:
- name: addresses
  description: Search for addresses
- name: municipalities
  description: Search for municipalities and municipality parts
- name: postals
  description: Search for postal info
- name: streets
  description: Search for streets
paths:
  /api/belgianAddress/v2/addresses:
    get:
      tags:
      - addresses
      summary: Search for addresses
      description: A series of parameters can be used to search for addresses
      parameters:
      - name: after
        in: query
        description: After this address (used in pagination)
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/adres/205001/2014-03-19T16:59:54.467
      - name: boxNumber
        in: query
        description: Box number
        required: false
        schema:
          type: string
        example: 12
      - name: coordX
        in: query
        description: X coordinate (in WGS84/GPS or Lambert72)
        required: false
        schema:
          format: double
          type: number
        examples:
          gpsx:
            value: 4.231
          lambert72x:
            value: 140373
      - name: coordY
        in: query
        description: Y coordinate (in WGS84/GPS or Lambert72)
        required: false
        schema:
          format: double
          type: number
        examples:
          gpsy:
            value: 51.210
          lambert72y:
            value: 211124
      - name: crs
        in: query
        description: Coordinate reference system
        required: false
        schema:
          default: gps
          enum:
          - gps
          - lambert72
          type: string
        example: gps
      - name: embed
        in: query
        description: Embed referenced streets, municipalities ...
        required: false
        default: false
        schema:
          default: false
          type: boolean
        example: true
      - name: houseNumber
        in: query
        description: House number
        required: false
        schema:
          type: string
        example: 71
      - name: municipalityID
        in: query
        description: Municipality identifier
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/gemeente/23027/2002-08-13T17:32:32
      - name: municipalityCode
        in: query
        description: REFNIS code (assigned by Statbel)
        required: false
        schema:
          maximum: 93099
          minimum: 11001
          type: string
          example: 23027
      - name: municipalityName
        in: query
        description: Municipality name
        required: false
        schema:
          type: string
        example: Bruxelles
      - name: polygon
        in: query
        description: Polygon points, separated by '~'
        required: false
        schema:
          type: string
        example: "4.107,50.528~4.300,50.528~4.300,50.699~4.107,50.528"
      - name: postCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
        example: 1000
      - name: postID
        in: query
        description: Postal identifier
        required: false
        schema:
          type: string
      - name: postName
        in: query
        description: Postal name
        required: false
        schema:
          type: string
        example: Bruxelles
      - name: radius
        in: query
        description: Maximum distance (in meters)
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        example: 100
      - name: addressStatus
        in: query
        description: Status
        required: false
        schema:
          enum:
          - current
          - reserved
          - retired
        example: current
      - name: streetID
        in: query
        description: Street identifier
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/straatnaam/1/2013-04-12T20:06:58.583
      - name: streetName
        in: query
        description: Street name
        required: false
        schema:
          type: string
        example: Grote Markt
      responses:
        200:
          description: A (possibly empty) list of addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressCollection'
  /api/belgianAddress/v2/addresses/{id}:
    get:
      tags:
      - addresses
      summary: Get address by id
      description: The ID is a concatenation of the address namespace, objectIdentifier and versionIdentifier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        example: https://data.vlaanderen.be/id/adres/205001/2014-03-19T16:59:54.467
      - name: embed
        in: query
        description: Embed referenced streets, municipalities ...
        required: false
        schema:
          type: boolean
        example: true
      responses:
        200:
          description: Requested address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        404:
          description: Address not found
  /api/belgianAddress/v2/municipalities:
    get:
      tags:
      - municipalities
      summary: Search for municipalities
      description: The ID is a concatenation of the address namespace, objectIdentifier and versionIdentifier
      parameters:
      - name: municipalityName
        in: query
        description: Municipality name, searches in Dutch/French/German names
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/gemeente/23027/2002-08-13T17:32:32
      - name: nameMatch
        in: query
        description: Match type
        required: false
        schema:
          default: exact
          enum:
          - exact
          - fuzzy
          - startwith
          type: string
      - name: municipalityCode
        in: query
        description: REFNIS code (assigned by Statbel)
        required: false
        schema:
          maximum: 93099
          minimum: 11001
          type: string
          example: 23027
      - name: postCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
          type: string
        example: 1500
      responses:
        200:
          description: A (possibly empty) list of municipalities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MunicipalityCollection'
  /api/belgianAddress/v2/municipalities/{id}:
    get:
      tags:
      - municipalities
      summary: Get a municipality by ID
      description: The ID is a concatenation of the address namespace, objectIdentifier, and versionIdentifier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        example: https://data.vlaanderen.be/id/gemeente/23027/2002-08-13T17:32:32
      responses:
        200:
          description: Requested municipality
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Municipality'
        404:
          description: Municipality not found
  /api/belgianAddress/v2/municipalityParts:
    get:
      tags:
      - municipalities
      summary: Search for municipality parts
      description: Currently only the Walloon Region provides info about municipality parts
      parameters:
      - name: after
        in: query
        description: After municipality part (used in pagination)
        required: false
        schema:
          type: string
      - name: partOfMunicipalityName
        in: query
        description: Municipality part name
        required: false
        schema:
          type: string
        example: Bruxelles
      responses:
        200:
          description: A (possibly empty) list of municipality parts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MunicipalityPartCollection'
  /api/belgianAddress/v2/municipalityParts/{id}:
    get:
      tags:
      - municipalities
      summary: Get a municipality part by full ID
      description: Currently only the Walloon Region provides info about municipality parts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Requested municipality part
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MunicipalityPart'
        404:
          description: Municipality part not found
  /api/belgianAddress/v2/postalInfos:
    get:
      tags:
      - postals
      summary: Search for postal info
      parameters:
      - name: after
        in: query
        description: After postal info (used in pagination)
        required: false
        schema:
          type: string
      - name: postName
        in: query
        description: Municipality name, searches in Dutch/French/German names
        required: false
        schema:
          type: string
          example: Bruxelles
      - name: postCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
          type: string
          example: 1000
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalInfoCollection'
  /api/belgianAddress/v2/postalInfos/{id}:
    get:
      tags:
      - postals
      summary: Get a postal info by ID
      description: The ID is a concatenation of the address namespace, objectIdentifier and versionIdentifier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: https://data.vlaanderen.be/id/postinfo/2323/2002-08-13T16:37:33
      responses:
        200:
          description: Requested postal info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalInfo'
        404:
          description: Postal info not found
  /api/belgianAddress/v2/streets:
    get:
      tags:
      - streets
      summary: Search for streets
      parameters:
      - name: after
        in: query
        description: After street (used in pagination)
        required: false
        schema:
          type: string
          example: "https://data.vlaanderen.be/id/straatnaam/26117/2013-10-05T15:59:10.067"
      - name: municipalityID
        in: query
        description: Municipality identifier
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/gemeente/23027/2002-08-13T17:32:32
      - name: municipalityCode
        in: query
        description: REFNIS code (assigned by Statbel)
        required: false
        schema:
          maximum: 93099
          minimum: 11001
          type: string
          example: 23027
      - name: municipalityName
        in: query
        description: (Part of) municipality name, searches in Dutch/French/German names
        required: false
        schema:
          type: string
          example: Halle
      - name: postalinfoID
        in: query
        required: true
        schema:
          type: string
          example: https://data.vlaanderen.be/id/postinfo/2323/2002-08-13T16:37:33
      - name: postCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
          type: string
          example: 1000
      - name: postName
        in: query
        description: Postal name, searches in Dutch/French/German names
        required: false
        schema:
          type: string
          example: Lembeek
      - name: streetName
        in: query
        description: Street name, searches in Dutch/French/German names
        required: false
        schema:
          type: string
          example: Grote Markt
      responses:
        200:
          description: A (possibly empty) list of streets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreetCollection'
  /api/belgianAddress/v2/streets/{id}:
    get:
      tags:
      - streets
      summary: Get a street by ID
      description: The ID is a concatenation of the address namespace, objectIdentifier and versionIdentifier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Requested street
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Street'
        404:
          description: Street not found
  /api/belgianAddress/v2/version:
    get:
      tags:
      - Lookup Resource
      summary: Display version info
      description: For debug / support purposes only, displays version info of source data and API
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
components:    
  schemas:
    Name:
      type: object
      properties:
        nl:
          description: Name in Dutch
          type: string
        fr:
          description: Name in French
          type: string
        de:
          description: Name in German
          type: string
    ObjectReference:
      type: object
      properties:
        id:
          description: Identifier
          type: string
        href:
          description: hyperlink to object
          type: string
    Address:
      type: object
      properties:
        id:
          description: Identifier
          type: string
        self:
          description: Link to self
          type: string
        street:
          description: reference to street
          $ref: '#/components/schemas/ObjectReference'
        municipality:
          description: reference to municipality
          $ref: '#/components/schemas/ObjectReference'
        municipalityPart:
          description: reference to part of municipality
          $ref: '#/components/schemas/ObjectReference'
        postal:
          description: reference to postal info
          $ref: '#/components/schemas/ObjectReference'
        houseNumber:
          description: house number
          type: string
          example: 71
        boxNumber:
          description: box number
          type: string
          example: 5
        addressStatus:
          description: Status
          type: string
          example: current
        startDate:
          description: Valid from
        endDate:
          description: Valid till
    AddressCollection:
      type: object
      properties:
        self:
          description: Link to self
          type: string
        items:
          description: Array of results
          type: array
          items:
            $ref: '#/components/schemas/Address'
        embedded:
          type: array
          items:
            anyOf:
             - $ref: '#/components/schemas/Municipality'
             - $ref: '#/components/schemas/MunicipalityPart'
             - $ref: '#/components/schemas/PostalInfo'
             - $ref: '#/components/schemas/Street'
    Municipality:
      type: object
      properties:
        id:
          description: Identifier
          type: string
        self:
          description: Link to self
          type: string
        municpalityCode:
          description: REFNIS code (assigned by Statbel)
          type: string
          example: 21007
        municipalityName:
          $ref: '#/components/schemas/Name'
    MunicipalityCollection:
      type: object
      properties:
        self:
          description: Link to self
          type: string
        items:
          description: Array of results
          type: array
          items:
            $ref: '#/components/schemas/Municipality'
    MunicipalityPart:
      type: object
      properties:
        id:
          description: Identifier
          type: string
        self:
          description: Link to self
          type: string
        partOfMunicipalityName:
          $ref: '#/components/schemas/Name'
    MunicipalityPartCollection:
      type: object
      properties:
        self:
          description: Link to self
          type: string
        items:
          description: Array of results
          type: array
          items:
            $ref: '#/components/schemas/MunicipalityPart'
    PostalInfo:
      type: object
      properties:
        id:
          description: Identifier
          type: string
        self:
          description: Link to self
          type: string
        postCode:
          description: Postal code (assigned by bPost)
          type: string
          example: 1500
        postName:
          $ref: '#/components/schemas/Name'
    PostalInfoCollection:
      type: object
      properties:
        self:
          description: Link to self
          type: string
        items:
          description: Array of results
          type: array
          items:
            $ref: '#/components/schemas/PostalInfo'
    Street:
      type: object
      properties:
        id:
          description: Identifier
          type: string
        self:
          description: Link to self
          type: string
        streetName:
          $ref: '#/components/schemas/Name'
        streetNameStatus:
          description: Status
          type: string
          example: current
        startDate:
          description: Valid from
        endDate:
          description: Valid till
    StreetCollection:
      type: object
      properties:
        self:
          description: Link to self
          type: string
          example: "http://localhost:8080/api/belgianAddress/v2/streets/https:%2F%2Fdata.vlaanderen.be%2Fid%2Fstraatnaam%2F26117%2F2013-10-05T15:59:10.067"
        items:
          description: Array of results
          type: array
          items:
            $ref: '#/components/schemas/Street'
    Version:
      type: object
      properties:
        key:
          description: Key
          type: string
          example: key
        value:
          description: Value
          type: string
          example: value
