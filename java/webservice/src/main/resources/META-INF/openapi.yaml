---
openapi: 3.0.3
info:
  title: v2 Belgian Streets and Addresses REST API Demo
  description: "OpenAPI specification of the v2 Belgian Streets and Addresses (BeSt) REST API.\n\n\
    \ By relying on a consolidated dataset, this new version delivers greater performance and more\
    \ features.\
    \ An address is an identification of the fixed location of a property."
  contact:
    name: BOSA DG DT servicedesk
    email: servicedesk.DTO@bosa.fgov.be
  version: 2.0.0
tags:
- name: addresses
  description: Search for addresses
- name: municipalities
  description: Search for municipalities and municipality parts
- name: postals
  description: Search for postal info
- name: streets
  description: Search for streets
paths:
  /api/belgianAddress/v2/addresses:
    get:
      tags:
      - addresses
      summary: Search for addresses
      description: A series of parameters can be used to search for addresses
      parameters:
      - name: after
        in: query
        description: "After this address (used in pagination), ('/' must be URL-encoded to '%2f')"
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/adres/205001/2014-03-19T16:59:54.467
      - name: boxNumber
        in: query
        description: Box number
        required: false
        schema:
          type: string
        example: 12
      - name: coordX
        in: query
        description: "X coordinate, in WGS84/GPS or Lambert72"
        required: false
        schema:
          format: double
          type: number
        examples: { "4.107" }
      - name: coordY
        in: query
        description: "Y coordinate, in WGS84/GPS or Lambert72"
        required: false
        schema:
          format: double
          type: number
        examples: {"50.528" }
      - name: crs
        in: query
        description: Coordinate reference system
        required: false
        schema:
          default: gps
          enum:
          - gps
          - lambert72
          type: string
        example: gps
      - name: embed
        in: query
        description: "Embed referenced streets, municipalities ..."
        required: false
        schema:
          type: boolean
        example: true
      - name: houseNumber
        in: query
        description: House number
        required: false
        schema:
          type: string
        example: 71
      - name: municipalityID
        in: query
        description: Municipality identifier
        required: false
        schema:
          type: string
      - name: municipalityName
        in: query
        description: Municipality name
        required: false
        schema:
          type: string
        example: Bruxelles
      - name: polygon
        in: query
        description: "Polygon points, separated by '~'"
        required: false
        schema:
          type: string
        example: "4.107,50.528~4.300,50.528~4.300,50.699~4.107,50.528"
      - name: postalCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
        example: 1000
      - name: postalID
        in: query
        description: Postal identifier
        required: false
        schema:
          type: string
      - name: postalName
        in: query
        description: Postal name
        required: false
        schema:
          type: string
        example: Bruxelles
      - name: radius
        in: query
        description: Maximum distance (in meters)
        required: false
        schema:
          format: int32
          type: integer
        example: 100
      - name: status
        in: query
        description: Status
        required: false
        schema:
          enum:
          - reserved
          - reserved
          - retired
        example: current
      - name: streetID
        in: query
        description: Street identifier
        required: false
        schema:
          type: string
        example: https://data.vlaanderen.be/id/straatnaam/1/2013-04-12T20:06:58.583
      - name: streetName
        in: query
        description: Street name
        required: false
        schema:
          type: string
        example: Grote Markt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: A (possibly empty) list of addresses
          content:
            application/json:
              schema:
                type: object
  /api/belgianAddress/v2/addresses/{id}:
    get:
      tags:
      - addresses
      summary: Get address by id
      description: "The ID is a concatenation of the address namespace, objectIdentifier,\
        \ and versionIdentifier"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: embed
        in: query
        description: "Embed referenced streets, municipalities ..."
        required: false
        schema:
          type: boolean
        example: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: Requested address
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Address not found
  /api/belgianAddress/v2/municipalities:
    get:
      tags:
      - municipalities
      summary: Search for municipalities
      description: "The ID is a concatenation of the address namespace, objectIdentifier,\
        \ and versionIdentifier"
      parameters:
      - name: name
        in: query
        description: "Municipality name, searches in Dutch/French/German names"
        required: false
        schema:
          type: string
      - name: nameMatch
        in: query
        description: Match type
        required: false
        schema:
          default: exact
          enum:
          - exact
          - fuzzy
          - startwith
          type: string
      - name: niscode
        in: query
        description: REFNIS code (assigned by Statbel)
        required: false
        schema:
          maximum: 93099
          minimum: 11001
          type: string
        example: 23027
      - name: postalcode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
          type: string
        example: 1500
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: A (possibly empty) list of municipalities
          content:
            application/json:
              schema:
                type: object
  /api/belgianAddress/v2/municipalities/{id}:
    get:
      tags:
      - municipalities
      summary: Get a municipality by ID
      description: "The ID is a concatenation of the address namespace, objectIdentifier,\
        \ and versionIdentifier"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: Requested municipality
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Municipality not found
  /api/belgianAddress/v2/municipalityParts:
    get:
      tags:
      - municipalities
      summary: Search for municipality parts
      description: "Note: currently only the Walloon Region provides info about municipality\
        \ parts"
      parameters:
      - name: after
        in: query
        description: After municipality part (used in pagination)
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: Municipality part name
        required: false
        schema:
          type: string
        example: Bruxelles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: A (possibly empty) list of municipality parts
          content:
            application/json:
              schema:
                type: object
  /api/belgianAddress/v2/municipalityParts/{id}:
    get:
      tags:
      - municipalities
      summary: Get a municipality part by full ID
      description: "Note: currently only the Walloon Region provides info about municipality\
        \ parts"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: Requested municipality part
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Municipality part not found
  /api/belgianAddress/v2/postal:
    get:
      tags:
      - postals
      summary: Search for postal info
      parameters:
      - name: after
        in: query
        description: After postal info (used in pagination)
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: "Municipality name, searches in Dutch/French/German names"
        required: false
        schema:
          type: string
        example: Bruxelles
      - name: postalCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
          type: string
        example: 1000
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonObject'
  /api/belgianAddress/v2/postal/{id}:
    get:
      tags:
      - postals
      summary: Get a postal info by ID
      description: "Note: the ID is a concatenation of the address namespace, objectIdentifier,\
        \ and versionIdentifier"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: Requested postal info
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Postal info not found
  /api/belgianAddress/v2/streets:
    get:
      tags:
      - streets
      summary: Search for streets
      parameters:
      - name: after
        in: query
        description: After street (used in pagination)
        required: false
        schema:
          type: string
      - name: municipalityID
        in: query
        description: Municipality identifier
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: "(Part of) street name, searches in Dutch/French/German names"
        required: false
        schema:
          type: string
        example: Grote Markt
      - name: postalCode
        in: query
        description: Postal code (assigned by bPost)
        required: false
        schema:
          maximum: 9999
          minimum: 1000
        example: 1500
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: A (possibly empty) list of streets
          content:
            application/json:
              schema:
                type: object
                properties:
                  self:
                    description: Link to self
                    type: string
                  items:
                    description: Array of results
                    type: array
                  id:
                    type: string
  /api/belgianAddress/v2/streets/{id}:
    get:
      tags:
      - streets
      summary: Get a street by ID
      description: "The ID is a concatenation of the address namespace, objectIdentifier,\
        \ and versionIdentifier"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriInfo'
      responses:
        "200":
          description: Requested street
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Unique identifier
                    type: string
                  self:
                    description: Link to self
                    type: string
                  name:
                    description: Array of results
                    type: object
                  streetnameType:
                    description: Array of results
                    type: string
        "404":
          description: Street not found
  /api/belgianAddress/v2/version:
    get:
      tags:
      - Lookup Resource
      summary: Display version info
      description: "For debug / support purposes only, displays version info of source\
        \ data and API"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
components:
  schemas:
    JsonObject:
      type: array
    MultivaluedMapStringString:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    PathSegment:
      type: object
      properties:
        path:
          type: string
        matrixParameters:
          $ref: '#/components/schemas/MultivaluedMapStringString'
    UriBuilder:
      type: object
    UriInfo:
      type: object
      properties:
        path:
          type: string
        pathSegments:
          type: array
          items:
            $ref: '#/components/schemas/PathSegment'
        requestUri:
          format: uri
          type: string
        requestUriBuilder:
          $ref: '#/components/schemas/UriBuilder'
        absolutePath:
          format: uri
          type: string
        absolutePathBuilder:
          $ref: '#/components/schemas/UriBuilder'
        baseUri:
          format: uri
          type: string
        baseUriBuilder:
          $ref: '#/components/schemas/UriBuilder'
        pathParameters:
          $ref: '#/components/schemas/MultivaluedMapStringString'
        queryParameters:
          $ref: '#/components/schemas/MultivaluedMapStringString'
        matchedURIs:
          type: array
          items:
            type: string
        matchedResources:
          type: array
          items: {}
    Version:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
